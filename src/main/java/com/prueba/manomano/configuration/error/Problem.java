package com.prueba.manomano.configuration.error;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import java.net.URI;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Problem {

    /**
     * An absolute URI that identifies the problem type.  When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).
     *
     * @return type
     */
    @JsonProperty("type")
    @Schema(description = "An absolute URI that identifies the problem type.  When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML). ",
            example = "https://zalando.github.io/problem/constraint-violation",
            format = "uri",
            defaultValue = "about:blank")
    @Valid
    private URI type = URI.create("about:blank");

    /**
     * A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized);
     *
     * @return title
     */
    @Schema(description = "A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized); ",
            example = "Service Unavailable")
    @JsonProperty("title")
    private String title;

    /**
     * The HTTP status code generated by the origin server for this occurrence of the problem.
     * minimum: 100
     * maximum: 600
     *
     * @return status
     */
    @JsonProperty("status")
    @Schema(description = "The HTTP status code generated by the origin server for this occurrence of the problem. ",
            example = "503",
            format = "int32",
            minimum = "100",
            maximum = "600",
            exclusiveMaximum = true)
    @Min(100)
    @Max(600)
    private Integer status;

    /**
     * A human readable explanation specific to this occurrence of the problem.
     *
     * @return detail
     */
    @JsonProperty("detail")
    @Schema(description = "A human readable explanation specific to this occurrence of the problem. ",
            example = "Connection to database timed out")
    private String detail;

    /**
     * An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
     *
     * @return instance
     */
    @JsonProperty("instance")
    @Schema(description = "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced. ",
            format = "uri")
    @Valid
    private URI instance;

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Problem {\n");

        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
        sb.append("    instance: ").append(toIndentedString(instance)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    public Problem type(URI type) {
        this.type = type;
        return this;
    }

    public Problem title(String title) {
        this.title = title;
        return this;
    }

    public Problem status(Integer status) {
        this.status = status;
        return this;
    }

    public Problem detail(String detail) {
        this.detail = detail;
        return this;
    }

    public Problem instance(URI instance) {
        this.instance = instance;
        return this;
    }


}
